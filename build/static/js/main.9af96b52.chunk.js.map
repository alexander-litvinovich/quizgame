{"version":3,"sources":["layouts/SplashLayout/index.js","layouts/SplashLayout/SplashLayout.js","containers/SplashContainer/index.js","containers/SplashContainer/SplashContainer.js","components/Indicator/index.js","components/Indicator/Indicator.js","components/Button/index.js","components/Button/Button.js","layouts/MenuLayout/index.js","layouts/MenuLayout/MenuLayout.js","utils/Helpers.js","utils/GameStore.js","containers/MenuContainer/MenuContainer.js","containers/MenuContainer/index.js","components/Header/index.js","components/Header/Header.js","components/RoundButton/index.js","components/RoundButton/RoundButton.js","components/Icon/Assets/IconRight.js","components/Icon/Assets/IconSkip.js","components/Icon/Assets/IconMenu.js","components/Icon/Assets/IconRestart.js","components/Icon/Assets/IconCross.js","components/Icon/Assets/IconBack.js","components/Icon/Assets/IconPreloader.js","components/Icon/Assets/IconHighlight.js","components/Icon/index.js","components/Icon/Icon.js","components/LastRoundWidget/index.js","components/LastRoundWidget/LastRoundWidget.js","components/StatsTable/StatsTable.js","components/StatsTable/index.js","components/Particles/Particles.js","components/Particles/index.js","layouts/StatisticsLayout/index.js","layouts/StatisticsLayout/StatisticsLayout.js","containers/StatisticsContainer/index.js","containers/StatisticsContainer/StatisticsContainer.js","utils/Dictionary/index.js","utils/Dictionary/Dictionary.js","components/Radio/index.js","components/Radio/Radio.js","components/Checkbox/Checkbox.js","components/Checkbox/index.js","components/NumberInput/index.js","components/NumberInput/NumberInput.js","layouts/SettingsLayout/index.js","layouts/SettingsLayout/SettingsLayout.js","containers/SettingsContainer/index.js","containers/SettingsContainer/SettingsContainer.js","layouts/RulesLayout/index.js","layouts/RulesLayout/RulesLayout.js","containers/RulesContainer/index.js","containers/RulesContainer/RulesContainer.js","components/Card/Card.js","components/Card/index.js","components/ProgressBar/index.js","components/ProgressBar/ProgressBar.js","components/ModalWindow/index.js","components/ModalWindow/ModalWindow.js","layouts/GameLayout/index.js","layouts/GameLayout/GameLayout.js","containers/GameContainer/GameContainer.js","containers/GameContainer/index.js","App.js","index.js"],"names":["SplashLayout","_ref","onClick","react_default","a","createElement","className","SplashContainer","withRouter","history","navToMenu","push","setTimeout","layouts_SplashLayout","Indicator","title","value","_ref$onClick","_ref$highlighter","highlighter","children","Button","func","_ref$subTitle","subTitle","_ref$link","link","color","small","classes","classNames","Button--small","Button--colorBlue","Button--colorGreen","Button--colorRed","Button--colorMagenta","Button--colorBlack","inner","Fragment","length","Link","to","event","stopPropagation","MenuLayout","game","freePlay","statistics","settings","rules","components_Indicator","components_Button","Object","assign","secToTimeString","input","mm","Math","floor","ss","concat","toString","roundEfficiency","right","arguments","undefined","time","efficiency","toFixed","GameStore","loadSettings","JSON","parse","localStorage","getItem","gameMode","timeLimit","cardSet","saveSettings","newSettings","console","log","setItem","stringify","saveDicts","newDicts","loadDicts","loadStats","showBest","stats","bestScore","index","forEach","element","pushStats","wrong","skipped","timeStamp","this","slice","MAX_STATS_COUNT","unshift","unsetSettings","removeItem","clearStats","MenuContainer","lastRound","gameModeLabels","true","false","gameSubTitle","30","60","180","300","statsSubTitle","layouts_MenuLayout","Header","leftButton","rightButton","fixed","is-fixed","RoundButton","name","_ref$color","ghost","onFocus","onBlur","disabled","is-disabled","RoundButton--sizeSmall","RoundButton--styleGhost","RoundButton--colorBlue","RoundButton--colorGreen","RoundButton--colorRed","RoundButton--colorMagenta","RoundButton--colorBlack","RoundButton--colorWhite","aria-label","IconRight","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","IconSkip","IconMenu","IconRestart","IconCross","IconBack","IconPreloader","preserveAspectRatio","class","cx","cy","ng-attr-stroke","ng-attr-stroke-width","ng-attr-r","ng-attr-stroke-dasharray","stroke","stroke-width","r","stroke-dasharray","stroke-linecap","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","IconHighlight","Icon","CustomIcon","Right","Skip","Menu","Back","Restart","Cross","Preloader","Highlight","LastRoundWidget","style","button","LastRoundWidget--stats","LastRoundWidget--round","LastRoundWidget--extraSpaceForButton","components_Icon","SlatsTableLine","timeTrial","_ref$bestScore","key","StatsTable","_ref2","faded","StatsTable--faded","map","round","StatsTable_SlatsTableLine","iterate","Array","Particles","_","StatisticsLayout","roundEnd","rounds","nextRoundButton","returnToMenu","goToStats","components_Header","components_RoundButton","components_Particles","components_LastRoundWidget","components_StatsTable","StatisticsContainer","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","shift","state","_this$state","layouts_StatisticsLayout","Component","instance","_catalogUrl","_list","_dictionaries","dictionaryId","dict","dicts","list","cache","refetch","keys","isListCached","_getList","navigator","onLine","fetch","response","json","dictionaries","_storeList","isDictCached","_getDict","uri","words","_storeDict","Radio","onWhenChange","options","size","option","tabIndex","checked","Radio-option--colorBlue","Radio-option--colorGreen","Radio-option--colorRed","Radio-option--colorMagenta","Radio-option--colorBlack","Radio-option--small","onChange","CheckMark","Checkbox","_ref$onWhenChange","label","Checkbox_CheckMark","NumberInput","React","createRef","inputNormalizer","_this$props","min","max","result","split","filter","char","test","join","onButtonChange","inc","current","onKeyDown","onInput","target","_this$props2","NumberInput--small","NumberInput--colorBlue","NumberInput--colorGreen","NumberInput--colorRed","NumberInput--colorMagenta","NumberInput--colorBlack","ref","SettingsLayout","gameModeOptions","timeLimitOptions","isDictListLoaded","onChangeSettings","onSelectDicts","dictionariesList","killCache","components_Radio","components_NumberInput","components_Checkbox","SettingsContainer","set","dictFallback","reduce","prev","cur","asyncToGenerator","regenerator_default","mark","_callee2","dictList","wrap","_context2","next","Dictionary","sent","t0","abrupt","error","get","t1","stop","objectSpread","fallback","layouts_SettingsLayout","RulesLayout","src","alt","href","RulesContainer","layouts_RulesLayout","SwipeableContainer","cardIndex","react_swipy_min_default","Card","_Component","_getPrototypeOf2","_len","args","_key","apply","onClickRight","forceSwipeRight","onClickSkip","forceSwipeLeft","skip","onSwipe","direction","swipeDirection","onAfterSwipe","isCardBack","onSwipeStart","onSwipeLeft","onSwipeRight","inherits","createClass","currentCard","word","tabooWords","category","setForceSwipe","isLoading","is-cardBack","is-loading","Card_SwipeableContainer","buttons","left","tabooWord","i","ProgressBar","ModalWindow","text","_ref$onClose","onOpen","onClose","isOpened","ModalWindow-Header--colorBlue","ModalWindow-Header--colorGreen","ModalWindow-Header--colorRed","ModalWindow-Header--colorMagenta","ModalWindow-Header--colorBlack","opened","GameLayout","_props$onSkip","onSkip","_props$onAnswer","onAnswer","_props$onStart","onStart","score","gameState","cardsQueue","is-cardSet","is-freePlay","isFreePlay","headerAction","timeIndicator","timeDisplay","back","menu","restart","isGameStarted","components_ProgressBar","renderHeader","card","array","image","_card$isLoading","components_Card","renderButtons","_ref3","onMenuActions","components_ModalWindow","isMenuOpened","overlay","goToMenu","resume","renderMenu","_ref4","onRestartDialogActions","isRestartDialogOpened","renderRestartDialog","initialState","keepScore","init","timerID","isPaused","GameContainer","toRight","onRestart","clearInterval","resetCards","cards","toConsumableArray","outerData","sort","random","splice","tick","_this$state2","_this$state3","roundStat","Date","now","navToRoundEnd","onModalWindowOpened","kind","setPause","paused","_this$state4","window","setInterval","forceSwipe","_this$state5","pop","isRight","_this$state6","_this$state7","Promise","all","dictId","isDictLoaded","_this$state8","layouts_GameLayout","App","Switch","Route","path","exact","component","containers_StatisticsContainer","containers_GameContainer","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9af96b52.chunk.js","sourcesContent":["import SplashLayout from './SplashLayout';\nexport default SplashLayout;\n","import React from \"react\";\nimport \"./SplashLayout.css\";\n\nconst SplashLayout = ({ onClick }) => (\n  <div className=\"SplashLayout\" onClick={onClick}>\n    <div className=\"SplashLayout-Decoration\">\n      <div className=\"rect1\">\n        <div className=\"rect2\">\n          <div className=\"rect3\">\n            <div className=\"rect4\" />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className=\"SplashLayout-appTitle\">\n      <h2 className=\"SplashLayout-appTitle-word\">Explain me&nbsp;that!</h2>\n      <label className=\"SplashLayout-appTitle-description\">\n        game for english learners\n      </label>\n    </div>\n  </div>\n);\n\nexport default SplashLayout;\n","import SplashContainer from './SplashContainer';\nexport default SplashContainer;\n","import React from \"react\";\nimport SplashLayout from \"layouts/SplashLayout\";\nimport { withRouter } from \"react-router-dom\";\n\nconst SplashContainer = withRouter(({ history }) => {\n  const navToMenu = () => {\n    history.push(\"/Menu\");\n  };\n\n  setTimeout(navToMenu, 1000);\n\n  return <SplashLayout onClick={navToMenu} />;\n});\n\nexport default SplashContainer;\n","import Indicator from './Indicator';\n\nexport default Indicator;","import React from 'react';\nimport './Indicator.css';\n\nconst Indicator = ({title, value, onClick = ()=>{}, highlighter=null, children}) => (\n    <div className=\"Indicator\" onClick={onClick}>\n        <label className=\"Indicator-Label\">\n            {highlighter} {title}\n        </label>\n        <div className=\"Indicator-Value\">\n            {children || value}\n        </div>\n    </div>\n);\n\nexport default Indicator;\n","import Button from './Button';\n\nexport default Button;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport \"./Button.css\";\n\nconst onClickBuffer = (func) => (event) => {\n  event.stopPropagation();\n  func();\n}\n\nconst Button = ({ title, subTitle = \"\", link = \"\", onClick, color, small }) => {\n  const classes = classNames(\"Button\", {\n    \"Button--small\": small,\n    \"Button--colorBlue\": color === \"blue\",\n    \"Button--colorGreen\": color === \"green\",\n    \"Button--colorRed\": color === \"red\",\n    \"Button--colorMagenta\": color === \"magenta\",\n    \"Button--colorBlack\": color === \"black\"\n  });\n\n  const inner = (\n    <React.Fragment>\n      <div className=\"Button-title\">\n        {title}\n        {subTitle.length > 0 && (\n          <div className=\"Button-subTitle\">{subTitle}</div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <React.Fragment>\n      {link.length ? (\n        <Link to={link} className={classes}>\n          {inner}\n        </Link>\n      ) : (\n        <button onClick={onClickBuffer(onClick)} className={classes}>\n          {inner}\n        </button>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Button;\n","import MenuLayout from \"./MenuLayout\";\n\nexport default MenuLayout;\n","import React from \"react\";\nimport \"./MenuLayout.css\";\nimport Indicator from \"components/Indicator\";\nimport Button from \"components/Button\";\n\nconst MenuLayout = ({ game, freePlay, statistics, settings, rules }) => {\n  return (\n    <div className=\"MenuLayout\">\n      <header className=\"MenuLayout-appName\">\n        <Indicator title=\"game for english learners\">\n          <h1>Explain me that!</h1>\n        </Indicator>\n      </header>\n      <nav className=\"MenuLayout-menuNav\">\n        <Button title=\"Start\" color=\"blue\" {...game} />\n        <Button title=\"Free play\" color=\"green\" {...freePlay} />\n        <Button title=\"Statistics\" color=\"magenta\" {...statistics} />\n        <Button title=\"Settings\" color=\"red\" {...settings} />\n        <Button title=\"Rules\" color=\"black\" {...rules} />\n      </nav>\n    </div>\n  );\n};\n\nexport default MenuLayout;\n","export const secToTimeString = input => {\n  let mm = Math.floor(+input / 60);\n  let ss = +input - mm * 60;\n\n  return `${mm < 10 ? \"0\" + mm : mm.toString()}:${\n    ss < 10 ? \"0\" + ss : ss.toString()\n  }`;\n};\n\nexport const roundEfficiency = (right = 0, time = 0) => {\n  let efficiency = time > 0 ? right / (time / 60) : 0;\n\n  if (efficiency === 0) return efficiency.toFixed(0);\n  if (efficiency < 1) return efficiency.toFixed(2);\n  if ((efficiency < 10) && (efficiency % efficiency.toFixed(0) > 0))\n    return efficiency.toFixed(1);\n  else return efficiency.toFixed(0);\n};\n","import { roundEfficiency } from \"utils/Helpers.js\";\n\nconst MAX_STATS_COUNT = 20;\nconst GAME_SETTINGS = \"gameSettings\";\nconst GAME_SELECTED_DICTS = \"gameDicts\";\nconst GAME_STATS = \"gameStats\";\n\nexport default class GameStore {\n  static loadSettings = function() {\n    const DEFAULT_SETTINGS = {\n      gameMode: true,\n      timeLimit: 30,\n      cardSet: 5\n    };\n\n    return JSON.parse(localStorage.getItem(GAME_SETTINGS)) || DEFAULT_SETTINGS;\n  };\n\n  static saveSettings = function(newSettings) {\n    console.log(newSettings);\n\n    localStorage.setItem(GAME_SETTINGS, JSON.stringify(newSettings));\n  };\n\n  static saveDicts = function(newDicts) {\n    console.log(newDicts);\n\n    localStorage.setItem(GAME_SELECTED_DICTS, JSON.stringify(newDicts));\n  };\n\n  static loadDicts = function() {\n    return JSON.parse(localStorage.getItem(GAME_SELECTED_DICTS)) || {};\n  };\n\n  static loadStats = function(showBest = true) {\n    let stats = JSON.parse(localStorage.getItem(GAME_STATS)) || [];\n\n    if (showBest && stats.length > 1) {\n      let bestScore = { value: +stats[0].efficiency, index: 0 };\n      stats.forEach((element, index) => {\n        if (+element.efficiency >= bestScore.value) {\n          bestScore.value = +element.efficiency;\n          bestScore.index = index;\n        }\n      });\n      stats[bestScore.index].bestScore = true;\n    }\n    console.log(\"loading stats\", stats);\n\n    return stats;\n  };\n\n  static pushStats = function({\n    gameMode,\n    right,\n    wrong,\n    skipped,\n    time,\n    timeLimit,\n    timeStamp\n  }) {\n    let stats = this.loadStats(false).slice(0, MAX_STATS_COUNT - 1) || [];\n    stats.unshift({\n      gameMode,\n      right,\n      wrong,\n      skipped,\n      time,\n      timeLimit,\n      timeStamp,\n      efficiency: roundEfficiency(right, time)\n    });\n\n    localStorage.setItem(GAME_STATS, JSON.stringify(stats));\n  };\n\n  static unsetSettings = function() {\n    localStorage.removeItem(GAME_SETTINGS);\n    localStorage.removeItem(GAME_SELECTED_DICTS);\n    localStorage.removeItem(GAME_STATS);\n  };\n\n  static clearStats = function() {\n    localStorage.removeItem(GAME_STATS);\n  };\n}\n","import React from \"react\";\nimport MenuLayout from \"layouts/MenuLayout\";\nimport GameStore from \"utils/GameStore.js\";\nimport { secToTimeString } from \"utils/Helpers.js\";\n\nconst MenuContainer = () => {\n  const settings = GameStore.loadSettings();\n  const lastRound = GameStore.loadStats().slice(0, 1)[0] || null;\n\n  const gameModeLabels = {\n    true: \"Time Attack\",\n    false: \"Card Set\"\n  };\n\n  const timeLimitLabels = {\n    30: \"Half of minute\",\n    60: \"1 minute\",\n    180: \"3 minutes\",\n    300: \"5 minutes\"\n  };\n\n  let gameSubTitle = `${\n    gameModeLabels[settings.gameMode] ? \"Time Attack\" : \"Card Set\"\n  }, ${\n    settings.gameMode\n      ? timeLimitLabels[settings.timeLimit]\n      : settings.cardSet + \" cards\"\n  }`;\n\n  let statsSubTitle = !!lastRound\n    ? `${gameModeLabels[lastRound.gameMode]}, ${\n        lastRound.right\n      } hits for ${secToTimeString(lastRound.time)}`\n    : \"\";\n\n  return (\n    <MenuLayout\n      game={{ link: \"/Game\", subTitle: gameSubTitle }}\n      freePlay={{ link: \"/Game/Free\" }}\n      statistics={{ link: \"/Statistics\", subTitle: statsSubTitle }}\n      settings={{ link: \"/Settings\" }}\n      rules={{ link: \"/Rules\" }}\n    />\n  );\n};\n\nexport default MenuContainer;\n","import MenuContainer from './MenuContainer';\nexport default MenuContainer;\n","import Header from \"./Header\";\n\nexport default Header;\n","import React from \"react\";\nimport classNames from \"classnames\"\nimport \"./Header.css\";\n\nconst Header = ({ children, leftButton, rightButton, fixed }) => {\n  return (\n    <header className={classNames(\"Header\",{\"is-fixed\":fixed})}>\n      <div className=\"Header-LeftButton\">{leftButton}</div>\n      <div className=\"Header-RightButton\">{rightButton}</div>\n      <div className=\"Header-Middle\">{children}</div>\n    </header>\n  );\n};\nexport default Header;\n","\nimport RoundButton from './RoundButton';\n\nexport default RoundButton;","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport \"./RoundButton.css\";\n\nconst onClickBuffer = (func) => (event) => {\n  event.stopPropagation();\n  func();\n}\n\nconst RoundButton = ({\n  name,\n  color = \"black\",\n  small,\n  ghost,\n  link,\n  onClick,\n  onFocus,\n  onBlur,\n  title,\n  children,\n  disabled\n}) => {\n  const classes = classNames(\"RoundButton\", {\n    \"is-disabled\": disabled,\n    \"RoundButton--sizeSmall\": small,\n    \"RoundButton--styleGhost\": ghost,\n    \"RoundButton--colorBlue\": color === \"blue\",\n    \"RoundButton--colorGreen\": color === \"green\",\n    \"RoundButton--colorRed\": color === \"red\",\n    \"RoundButton--colorMagenta\": color === \"magenta\",\n    \"RoundButton--colorBlack\": color === \"black\",\n    \"RoundButton--colorWhite\": color === \"white\"\n  });\n\n  const inner = <div className=\"RoundButton-child\">{children}</div>;\n\n  return link ? (\n    <Link\n      to={link}\n      name={name}\n      className={classes}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      title={title}\n      aria-label={title}\n    >\n      {inner}\n    </Link>\n  ) : (\n    <button\n      className={classes}\n      name={name}\n      onClick={onClickBuffer(onClick)}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      title={title}\n      aria-label={title}\n      disabled={disabled}\n    >\n      {inner}\n    </button>\n  );\n};\n\nexport default RoundButton;\n","import React from \"react\";\n\nconst IconRight = () => (\n  <svg\n    width=\"30\"\n    height=\"30\"\n    viewBox=\"0 0 30 30\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M28.414 5.586a2 2 0 0 1 0 2.828l-16 16a2 2 0 0 1-2.828 0l-8-8a2 2 0 1 1 2.828-2.828L11 20.172 25.586 5.586a2 2 0 0 1 2.828 0z\"\n    />\n  </svg>\n);\n\nexport default IconRight;\n","import React from \"react\";\n\nconst IconSkip = () => (\n  <svg\n    width=\"30\"\n    height=\"30\"\n    viewBox=\"0 0 30 30\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M13.414 6.414a2 2 0 1 0-2.828-2.828L3.59 10.58l-.044.046A1.993 1.993 0 0 0 3 12v.003a1.994 1.994 0 0 0 .586 1.411l7 7a2 2 0 1 0 2.828-2.828L9.828 14H20a3 3 0 0 1 3 3v8a2 2 0 1 0 4 0v-8a7 7 0 0 0-7-7H9.828l3.586-3.586z\"/>\n  </svg>\n);\n\nexport default IconSkip;\n","import React from \"react\";\n\nconst IconMenu = () => (\n  <svg\n    width=\"30\"\n    height=\"30\"\n    viewBox=\"0 0 30 30\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M29 5a2 2 0 0 0-2-2H3a2 2 0 1 0 0 4h24a2 2 0 0 0 2-2zm0 10a2 2 0 0 0-2-2H3a2 2 0 1 0 0 4h24a2 2 0 0 0 2-2zm-2 8a2 2 0 1 1 0 4H3a2 2 0 1 1 0-4h24z\"\n    />\n  </svg>\n);\n\nexport default IconMenu;\n","import React from \"react\";\n\nconst IconRestart = () => (\n  <svg\n    width=\"30\"\n    height=\"30\"\n    viewBox=\"0 0 30 30\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M9.343 20.665a8 8 0 0 0 11.314 0 7.984 7.984 0 0 0 1.564-2.207 2 2 0 0 1 3.609 1.725 11.984 11.984 0 0 1-2.345 3.31c-4.686 4.687-12.284 4.687-16.97 0-4.687-4.686-4.687-12.284 0-16.97 4.686-4.687 12.284-4.687 16.97 0l.122.121v-.828a2 2 0 1 1 4 0v5.656a2 2 0 0 1-2 2H19.95a2 2 0 0 1 0-4h.828l-.121-.12A8 8 0 0 0 9.343 20.664z\"/>\n  </svg>\n);\n\nexport default IconRestart;\n","import React from \"react\";\n\nconst IconCross = () => (\n  <svg\n    width=\"30\"\n    height=\"30\"\n    viewBox=\"0 0 30 30\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M23.414 9.414a2 2 0 1 0-2.828-2.828L15 12.172 9.414 6.586a2 2 0 0 0-2.828 2.828L12.172 15l-5.586 5.586a2 2 0 1 0 2.828 2.828L15 17.828l5.586 5.586a2 2 0 1 0 2.828-2.828L17.828 15l5.586-5.586z\"/>\n  </svg>\n);\n\nexport default IconCross;\n","import React from \"react\";\n\nconst IconBack = () => (\n  <svg\n    width=\"30\"\n    height=\"30\"\n    viewBox=\"0 0 30 30\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M14.414 3.586a2 2 0 0 0-2.828 0l-10 10a2 2 0 0 0 0 2.828l10 10a2 2 0 1 0 2.828-2.828L7.828 17H27a2 2 0 1 0 0-4H7.828l6.586-6.586a2 2 0 0 0 0-2.828z\" />\n  </svg>\n);\n\nexport default IconBack;\n","import React from \"react\";\n\nconst IconPreloader = () => (\n  <svg\n    width=\"30\"\n    height=\"30\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 30 30\"\n    preserveAspectRatio=\"xMidYMid\"\n    class=\"lds-rolling\"\n  >\n    <circle\n      cx=\"15\"\n      cy=\"15\"\n      fill=\"none\"\n      ng-attr-stroke=\"{{config.color}}\"\n      ng-attr-stroke-width=\"{{config.width}}\"\n      ng-attr-r=\"{{config.radius}}\"\n      ng-attr-stroke-dasharray=\"{{config.dasharray}}\"\n      stroke=\"#ffffff\"\n      stroke-width=\"4\"\n      r=\"12\"\n      stroke-dasharray=\"30 15\"\n      stroke-linecap=\"round\"\n      transform=\"rotate(215 15 15)\"\n    >\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        calcMode=\"linear\"\n        values=\"0 15 15;360 15 15\"\n        keyTimes=\"0;1\"\n        dur=\"1s\"\n        begin=\"0s\"\n        repeatCount=\"indefinite\"\n      />\n    </circle>\n  </svg>\n);\n\nexport default IconPreloader;\n","import React from \"react\";\n\nconst IconHighlight = () => (\n  <svg width=\"10\" height=\"8\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 1l2.857 2.857L5 0l2.143 3.857L10 1 9 8H1L0 1z\" />\n  </svg>\n);\n\nexport default IconHighlight;\n","import Icon from \"./Icon\";\n\nexport default Icon;\n","import React from \"react\";\n\nimport IconRight from \"./Assets/IconRight\";\nimport IconSkip from \"./Assets/IconSkip\";\nimport IconMenu from \"./Assets/IconMenu\";\nimport IconRestart from \"./Assets/IconRestart\";\nimport IconCross from \"./Assets/IconCross\";\nimport IconBack from \"./Assets/IconBack\";\nimport IconPreloader from \"./Assets/IconPreloader\";\nimport IconHighlight from \"./Assets/IconHighlight\";\n\nconst Icon = ({ name }) => {\n  const icons = {\n    Right: IconRight,\n    Skip: IconSkip,\n    Menu: IconMenu,\n    Back: IconBack,\n    Restart: IconRestart,\n    Cross: IconCross,\n    Preloader: IconPreloader,\n    Highlight: IconHighlight,\n  };\n  const CustomIcon = typeof name === \"string\" && icons[name];\n\n  return CustomIcon ? <CustomIcon /> : name;\n};\n\nexport default Icon;\n","import LastRoundWidget from \"./LastRoundWidget\";\n\nexport default LastRoundWidget;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport Indicator from \"components/Indicator\";\nimport Icon from \"components/Icon\";\n\nimport { secToTimeString } from \"utils/Helpers.js\";\nimport \"./LastRoundWidget.css\";\n\nconst LastRoundWidget = ({ stats, style, button }) => {\n  return (\n    <div\n      className={classNames(\"LastRoundWidget\", {\n        \"LastRoundWidget--stats\": style === \"stats\",\n        \"LastRoundWidget--round\": style === \"round\",\n        \"LastRoundWidget--extraSpaceForButton\": button\n      })}\n    >\n      {style === \"stats\" && <h2>Last Round</h2>}\n      <div className=\"LastRoundWidget-topLine\">\n        <Indicator title=\"hits\" value={stats.right} />\n        <div className=\"LastRoundWidget-for\">for</div>\n        <Indicator title=\"time\" value={secToTimeString(stats.time)} />\n        <Indicator title=\"buzz\" value={stats.wrong} />\n        <Indicator title=\"skipped\" value={stats.skipped} />\n      </div>\n      <div className=\"LastRoundWidget-bottomLine\">\n        <Indicator\n          highlighter={stats.bestScore ? <Icon name=\"Highlight\" /> : null}\n          title=\"efficiency\"\n          value={`${stats.efficiency} hits/min`}\n        />\n      </div>\n      {button && <div class=\"LastRoundWidget-fab\">{button}</div>}\n    </div>\n  );\n};\nexport default LastRoundWidget;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { secToTimeString } from \"utils/Helpers.js\";\nimport Icon from \"components/Icon\";\n\nimport \"./StatsTable.css\";\n\nconst SlatsTableLine = ({\n  timeTrial,\n  right,\n  wrong,\n  time,\n  skipped,\n  timeStamp,\n  efficiency,\n  bestScore = false\n}) => {\n\n  return (\n    <tr key={timeStamp} className=\"StatsTable-Line\">\n      <td>\n        {timeTrial ? \"Time attack\" : \"Card set\"}\n        {bestScore && (\n          <span className=\"StatsTable-bestScore\">\n            <Icon name=\"Highlight\" />\n          </span>\n        )}\n      </td>\n      <td>{`${right} hits / ${secToTimeString(time)}`}</td>\n      <td className=\"number\">{wrong}</td>\n      <td className=\"number\">{skipped}</td>\n      <td className=\"number\">{efficiency}</td>\n    </tr>\n  );\n};\n\nconst StatsTable = ({ stats, faded }) => {\n  return (\n    <div\n      className={classNames(\"StatsTable\", {\n        \"StatsTable--faded\": faded === true\n      })}\n    >\n      <table>\n        <thead className=\"StatsTable-Header\">\n          <tr>\n            <th>mode</th>\n            <th>result</th>\n            <th className=\"number\">\n              <div className=\"canRotateContainer\">\n                <span className=\"canRotate\">buzz</span>\n              </div>\n            </th>\n            <th className=\"number\">\n              <div className=\"canRotateContainer\">\n                <span className=\"canRotate\">skipped</span>\n              </div>\n            </th>\n            <th className=\"number\">\n              <div className=\"canRotateContainer\">\n                <span className=\"canRotate\">efficiency</span>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {stats.map(round => (\n            <SlatsTableLine {...round} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\nexport default StatsTable;\n","import StatsTable from \"./StatsTable\";\n\nexport default StatsTable;\n","import React from \"react\";\nimport \"./Particles.css\";\n\nconst iterate = new Array(18).fill(null);\n\nconst Particles = () => (\n  <div class=\"Particles\">\n    {iterate.map((_,index) => (\n      <div key={`b${index}`} class=\"Particles-box\">\n        <div key={`p${index}`} class=\"Particles-part\" />\n      </div>\n    ))}\n  </div>\n);\n\nexport default Particles;\n","import Particles from './Particles';\n\nexport default Particles;\n","import StatisticsLayout from \"./StatisticsLayout\";\n\nexport default StatisticsLayout;\n","import React from \"react\";\nimport Header from \"components/Header\";\nimport RoundButton from \"components/RoundButton\";\nimport Button from \"components/Button\";\nimport Icon from \"components/Icon\";\nimport LastRoundWidget from \"components/LastRoundWidget\";\nimport StatsTable from \"components/StatsTable\";\nimport Particles from \"components/Particles\";\n\nimport \"./StatisticsLayout.css\";\n\nconst renderFallback = () => (\n  <div className=\"StatisticsLayout-Fallback\">\n    <h2>There is nothing to show</h2>\n    <div>\n      Play couple of games, have fun, then return and we will show you the\n      Statistics.\n    </div>\n  </div>\n);\n\nconst renderStatsFallback = () => (\n  <div className=\"StatisticsLayout-StatsTableFallback\">\n    Keep trying and there will be your statistics.\n  </div>\n);\n\nconst StatisticsLayout = ({\n  roundEnd,\n  rounds,\n  lastRound,\n  nextRoundButton,\n  returnToMenu,\n  goToStats,\n  clearStats\n}) => {\n  return (\n    <div className=\"StatisticsLayout\">\n      <Header\n        fixed\n        leftButton={\n          <RoundButton {...returnToMenu} title=\"Back to menu\" small ghost>\n            {roundEnd ? <Icon name=\"Menu\" /> : <Icon name=\"Back\" />}\n          </RoundButton>\n        }\n      >\n        <h1>{roundEnd ? \"Round!\" : \"Statistics\"}</h1>\n      </Header>\n\n      {!lastRound ? (\n        renderFallback()\n      ) : (\n        <div className=\"StatisticsLayout-pane\">\n          {lastRound.bestScore && <Particles />}\n          <LastRoundWidget\n            stats={lastRound}\n            style={roundEnd ? \"round\" : \"stats\"}\n            button={\n              roundEnd && (\n                <RoundButton\n                  color=\"blue\"\n                  title=\"Next round\"\n                  {...nextRoundButton}\n                >\n                  <Icon name=\"Restart\" />\n                </RoundButton>\n              )\n            }\n          />\n          {rounds.length > 0 ? (\n            <StatsTable stats={rounds} faded={roundEnd} />\n          ) : (\n            renderStatsFallback()\n          )}\n          {rounds.length > 0 && !roundEnd && (\n            <div className=\"StatisticsLayout-clearButton\">\n              <RoundButton\n                {...clearStats}\n                title=\"Clear game statistics\"\n                color=\"red\"\n                small\n              >\n                <Icon name=\"Cross\" />\n              </RoundButton>\n            </div>\n          )}\n        </div>\n      )}\n      {rounds.length > 0 && roundEnd && (\n        <Button title=\"Statistics\" color=\"black\" {...goToStats} />\n      )}\n    </div>\n  );\n};\n\nexport default StatisticsLayout;\n","import StatisticsContainer from \"./StatisticsContainer\";\n\nexport default StatisticsContainer;\n","import React, { Component } from \"react\";\nimport GameStore from \"utils/GameStore.js\";\n\nimport StatisticsLayout from \"layouts/StatisticsLayout\";\n\nclass StatisticsContainer extends Component {\n  constructor(props) {\n    super(props);\n    let rounds = GameStore.loadStats();\n    const lastRound = rounds.shift();\n    if (props.roundEnd) rounds = rounds.slice(0, 5);\n    this.state = {\n      rounds: rounds,\n      lastRound: lastRound,\n      roundEnd: props.roundEnd\n    };\n  }\n\n  clearStats = () => {\n    GameStore.clearStats();\n    this.setState({ rounds: [] });\n  };\n\n  render() {\n    const { lastRound, rounds, roundEnd } = this.state;\n    return (\n      <StatisticsLayout\n        roundEnd={roundEnd}\n        lastRound={lastRound}\n        rounds={rounds}\n        clearStats={{ onClick: this.clearStats }}\n        returnToMenu={{ link: \"/Menu\" }}\n        nextRoundButton={{ link: \"/Game\" }}\n        goToStats={{ link: \"/Statistics\" }}\n      />\n    );\n  }\n}\n\nexport default StatisticsContainer;\n","import Dictionary from \"./Dictionary\";\n\nconst instance = new Dictionary();\n\nexport default instance;\n","const DICTIONARY_CACHE_KEY = \"cachedDict\";\nconst LIST_CACHE_KEY = \"cachedList\";\n\nclass Dictionary {\n  _catalogUrl = \"/dicts/\";\n\n  _list = {};\n  _dictionaries = {};\n\n  _storeDict(dictionaryId, dict) {\n    const dicts = JSON.parse(localStorage.getItem(DICTIONARY_CACHE_KEY)) || {};\n    dicts[dictionaryId] = dict;\n    localStorage.setItem(DICTIONARY_CACHE_KEY, JSON.stringify(dicts));\n  }\n\n  _getDict(dictionaryId) {\n    return (\n      JSON.parse(localStorage.getItem(DICTIONARY_CACHE_KEY))[dictionaryId] ||\n      null\n    );\n  }\n\n  _storeList(list) {\n    localStorage.setItem(LIST_CACHE_KEY, JSON.stringify(list));\n  }\n\n  _getList() {\n    return JSON.parse(localStorage.getItem(LIST_CACHE_KEY)) || null;\n  }\n\n  isListCached() {\n    let cache = localStorage.getItem(LIST_CACHE_KEY);\n    console.log(cache);\n\n    return !!cache;\n  }\n\n  isDictCached(dictionaryId) {\n    console.log(\"DEBUG DICTCACHE: \");\n    if(!localStorage.getItem(DICTIONARY_CACHE_KEY)) return false;\n\n    let dictCache = JSON.parse(localStorage.getItem(DICTIONARY_CACHE_KEY))[dictionaryId];\n    return !!dictCache;\n  }\n\n  async list(refetch) {\n    console.log('Trying to get lists');\n\n    if(Object.keys(this._list).length && !refetch){\n      console.log('Taking lists from this');\n      return this._list;\n    }\n\n    if(this.isListCached() && !refetch) {\n      console.log('Taking lists from localstorage');\n      this._list = this._getList();\n      return this._list;\n    }\n\n    if (navigator.onLine) {\n      console.log('Going to internet for lists');\n      const response = await fetch(`${this._catalogUrl}index.json`);\n      const list = await response.json();\n      this._list = list.dictionaries;\n      this._storeList(list.dictionaries);\n      console.log(this._list);\n    }\n\n    return this._list;\n  }\n\n  async get(dictionaryId, refetch = false) {\n    console.log('Trying to get dicts');\n\n    if(this._dictionaries[dictionaryId] && !refetch){\n      console.log(\"Taking from this\");\n      return this._dictionaries[dictionaryId];\n    }\n\n    console.log(\"TEST CACHE: \", this.isDictCached(dictionaryId));\n\n    if(this.isDictCached(dictionaryId) && !refetch) {\n      console.log(\"Taking from localstorage\");\n      this._dictionaries[dictionaryId] = this._getDict(dictionaryId);\n      return this._dictionaries[dictionaryId];\n    }\n\n    if (navigator.onLine) {\n      console.log('Going to internet');\n      const response = await fetch(\n        `${this._catalogUrl}${(await this.list())[dictionaryId].uri}`\n      );\n      const dict = await response.json();\n      console.log(\"DICT LOADED HERE: \", dict);\n      this._dictionaries[dictionaryId] = dict.words;\n      this._storeDict(dictionaryId, dict.words);\n      return this._dictionaries[dictionaryId];\n    }\n\n  }\n}\n\nexport default Dictionary;\n","import Radio from './Radio';\n\nexport default Radio;","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Radio.css\";\n\nconst Radio = ({ onWhenChange, options, name, value, color, size }) => {\n  return (\n    <div className=\"Radio\">\n      {options.map(option => (\n        <label\n          tabIndex=\"0\"\n          className={classNames(\"Radio-option\", {\n            checked: option.value === value,\n            \"Radio-option--colorBlue\": color === \"blue\",\n            \"Radio-option--colorGreen\": color === \"green\",\n            \"Radio-option--colorRed\": color === \"red\",\n            \"Radio-option--colorMagenta\": color === \"magenta\",\n            \"Radio-option--colorBlack\": color === \"black\",\n            \"Radio-option--small\": size === \"small\"\n          })}\n        >\n          <div className=\"Radio-option-title\">\n            {/* TODO:  console.log(option.value, value)*/}\n            <input\n              name={name}\n              type=\"radio\"\n              className=\"_visuallyHidden\"\n              onChange={onWhenChange(option.value)}\n              value={option.value}\n              checked={option.value === +value}\n            />\n            {option.title}\n          </div>\n        </label>\n      ))}\n    </div>\n  );\n};\n\nexport default Radio;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Checkbox.css\";\n\nconst CheckMark = () => {\n  return (\n    <div className=\"CheckMark\">\n      <svg\n        width=\"30\"\n        height=\"30\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          className=\"checkmark\"\n          d=\"M1 5a4 4 0 0 1 4-4h20a4 4 0 0 1 4 4v20a4 4 0 0 1-4 4H5a4 4 0 0 1-4-4V5zm22.121 8.121A3 3 0 1 0 18.88 8.88L13 14.757l-1.879-1.878A3 3 0 1 0 6.88 17.12l4 4a3 3 0 0 0 4.242 0l8-8z\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25 2H5a3 3 0 0 0-3 3v20a3 3 0 0 0 3 3h20a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3zM5 0a5 5 0 0 0-5 5v20a5 5 0 0 0 5 5h20a5 5 0 0 0 5-5V5a5 5 0 0 0-5-5H5z\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nconst Checkbox = ({\n  onWhenChange = () => {},\n  label,\n  checked,\n  value\n}) => {\n  return (\n    <label\n      className={classNames(\"Checkbox\", { checked: checked })}\n      tabIndex=\"0\"\n    >\n      <input\n        type=\"checkbox\"\n        className=\"_visuallyHidden\"\n        value={value}\n        onChange={onWhenChange}\n        checked={!!checked}\n      />\n      <CheckMark />\n      {label}\n    </label>\n  );\n};\n\nexport default Checkbox;\n","import Checkbox from './Checkbox';\n\nexport default Checkbox;","import NumberInput from './NumberInput';\n\nexport default NumberInput;\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport \"./NumberInput.css\";\n\nimport RoundButton from \"components/RoundButton\";\n//import Icon from \"components/Icon\";\n\nclass NumberInput extends Component {\n  input = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = { value: props.value };\n  }\n\n  inputNormalizer = input => {\n    const { min, max } = this.props;\n    let result = +input\n      .toString()\n      .split(\"\")\n      .filter(char => /[0-9]/.test(char))\n      .join(\"\");\n\n    return result < min ? min : result > max ? max : result;\n  };\n\n  onButtonChange = inc => () => {\n    const { onWhenChange } = this.props;\n\n    let value = this.inputNormalizer(+this.input.current.value + inc);\n\n    this.setState({ value: value }, () => {\n      onWhenChange(value)();\n    });\n  };\n\n  onKeyDown = event => {\n    const { onWhenChange } = this.props;\n    let inc = 0;\n\n    if (event.key === \"ArrowUp\") inc = 1;\n    if (event.key === \"ArrowDown\") inc = -1;\n\n    if (inc !== 0) {\n      let value = this.inputNormalizer(+this.input.current.value + inc);\n\n      this.setState({ value: value }, () => {\n        onWhenChange(value)();\n      });\n    }\n  };\n\n  onInput = event => {\n    const { onWhenChange } = this.props;\n    let value = this.inputNormalizer(event.target.value);\n\n    this.setState({ value: value }, () => {\n      onWhenChange(value)();\n    });\n  };\n\n  render() {\n    const { small, color } = this.props;\n    const { value } = this.state;\n\n    const classes = classNames(\"NumberInput\", {\n      \"NumberInput--small\": small,\n      \"NumberInput--colorBlue\": color === \"blue\",\n      \"NumberInput--colorGreen\": color === \"green\",\n      \"NumberInput--colorRed\": color === \"red\",\n      \"NumberInput--colorMagenta\": color === \"magenta\",\n      \"NumberInput--colorBlack\": color === \"black\"\n    });\n\n    return (\n      <>\n        <div className={classes}>\n          <div className=\"NumberInput-minus\">\n            <RoundButton small ghost onClick={this.onButtonChange(-1)}>\n              -\n            </RoundButton>\n          </div>\n          <div className=\"NumberInput-plus\">\n            <RoundButton small ghost onClick={this.onButtonChange(1)}>\n              +\n            </RoundButton>\n          </div>\n          <div className=\"NumberInput-input\">\n            <input\n              type=\"text\"\n              ref={this.input}\n              value={value}\n              onInput={this.onInput}\n              onKeyDown={this.onKeyDown}\n              disabled={true}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default NumberInput;\n","import SettingsLayout from \"./SettingsLayout\";\n\nexport default SettingsLayout;\n","import React from \"react\";\nimport \"./SettingsLayout.css\";\n\nimport Header from \"components/Header\";\nimport Icon from \"components/Icon\";\nimport RoundButton from \"components/RoundButton\";\nimport Radio from \"components/Radio\";\nimport Checkbox from \"components/Checkbox\";\nimport NumberInput from \"components/NumberInput\";\nimport Button from \"components/Button\";\n\nconst SettingsLayout = ({\n  gameModeOptions,\n  timeLimitOptions,\n\n  isDictListLoaded,\n\n  settings,\n  dicts,\n\n  onChangeSettings,\n  onSelectDicts,\n\n  dictionariesList,\n\n  returnToMenu,\n  killCache\n}) => {\n  return (\n    <div className=\"SettingsLayout\">\n      <Header\n        leftButton={\n          <RoundButton title=\"Back to menu\" small ghost {...returnToMenu}>\n            <Icon name=\"Back\" />\n          </RoundButton>\n        }\n        fixed\n      >\n        <h1>Settings</h1>\n      </Header>\n\n      <div className=\"SettingsLayout-block\">\n        <label className=\"SettingsLayout-label\">game mode:</label>\n        <Radio\n          options={gameModeOptions}\n          value={settings.gameMode}\n          onWhenChange={onChangeSettings(\"gameMode\")}\n          color=\"red\"\n        />\n      </div>\n\n      <div className=\"SettingsLayout-block\">\n        {settings.gameMode ? (\n          <>\n            <label className=\"SettingsLayout-label\">time limit:</label>\n            <Radio\n              options={timeLimitOptions}\n              value={settings.timeLimit}\n              onWhenChange={onChangeSettings(\"timeLimit\")}\n              color=\"red\"\n            />\n          </>\n        ) : (\n          <>\n            <label className=\"SettingsLayout-label\">card set:</label>\n            <NumberInput\n              color=\"red\"\n              min={3}\n              max={10}\n              value={settings.cardSet}\n              onWhenChange={onChangeSettings(\"cardSet\")}\n            />\n          </>\n        )}\n      </div>\n\n      <div className=\"SettingsLayout-block\">\n        <label className=\"SettingsLayout-label\">dictionaries:</label>\n        <div className=\"DictsSelector\">\n        <div className=\"DictsSelector-wrapper\">\n          {isDictListLoaded ? (\n            <>\n              {Object.keys(dictionariesList).map(dict => (\n                <div className=\"DictsSelector-dict\">\n                  <Checkbox\n                    label={dictionariesList[dict].title}\n                    value={dict}\n                    onWhenChange={onSelectDicts(dict)}\n                    checked={dicts[dict]}\n                  />\n                </div>\n              ))}\n            </>\n          ) : (\n              <div className=\"DictsSelector-preloader\">\n                <Icon name=\"Preloader\" />\n                <div className=\"DictsSelector-preloader-text\">Please, be patient while we loading our best words</div>\n              </div>\n          )}\n            </div>\n        </div>\n      </div>\n\n      <div className=\"SettingsLayout-block\">\n        <label className=\"SettingsLayout-layout\">\n          for debugging purposes:\n        </label>\n        <Button color=\"red\" title=\"Clean, refetch\" {...killCache} />\n      </div>\n\n      <div className=\"SettingsLayout-block\">\n        <label className=\"SettingsLayout-tip\">\n          Settings are saving automatically\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsLayout;\n","import SettingsContainer from \"./SettingsContainer\";\n\nexport default SettingsContainer;\n","import React, { Component } from \"react\";\nimport GameStore from \"utils/GameStore.js\";\nimport Dictionary from \"utils/Dictionary\";\n\nimport SettingsLayout from \"layouts/SettingsLayout\";\n\nclass SettingsContainer extends Component {\n  gameModeOptions = [\n    {\n      title: \"Time attack\",\n      value: true\n    },\n    {\n      title: \"Cards set\",\n      value: false\n    }\n  ];\n\n  timeLimitOptions = [\n    {\n      title: \"Half of minute\",\n      value: 30\n    },\n    {\n      title: \"1 minute\",\n      value: 60\n    },\n    {\n      title: \"3 minutes\",\n      value: 60 * 3\n    },\n    {\n      title: \"5 minutes\",\n      value: 60 * 5\n    }\n  ];\n\n  async componentDidMount() {\n    const dictList = await Dictionary.list();\n    if (this.dictFallback()) {\n      let fallback = {};\n      Object.keys(dictList).forEach(element => {\n        fallback[element] = true;\n      });\n\n      this.setState({ dicts: fallback }, () => {\n        GameStore.saveDicts(fallback);\n      });\n    }\n\n    this.setState({ isDictListLoaded: true, dictionariesList: dictList });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: { ...GameStore.loadSettings() },\n      dicts: { ...GameStore.loadDicts() }\n    };\n  }\n\n  onChangeSettings = set => value => () => {\n    console.log(\"SET UPD!\");\n\n    const { settings } = this.state;\n    settings[set] = value;\n\n    console.log(\"SET UPD: \", settings);\n\n    this.setState({ settings: settings }, () => {\n      GameStore.saveSettings(settings);\n    });\n  };\n\n  onSelectDicts = set => event => {\n    console.log(event.target.checked);\n\n    let { dicts } = this.state;\n    dicts[set] = event.target.checked;\n\n    this.setState({ dicts: dicts }, () => {\n      GameStore.saveDicts(dicts);\n    });\n  };\n\n  dictFallback = () => {\n    let { dicts } = this.state;\n\n    return !Object.keys(dicts).reduce((prev, cur) => prev || dicts[cur], false);\n  };\n\n  killCache = async () => {\n    GameStore.unsetSettings();\n    let dictList;\n    try {\n      dictList = await Dictionary.list(true);\n    } catch (error) {\n      return console.error(\"Error on fetching dictionaries list\", error);\n    }\n\n    try {\n      await Object.keys(dictList).forEach(element => {\n        Dictionary.get(element, true);\n      });\n    } catch (error) {\n      return console.error(\"Error on fetching dictionaries\", error);\n    }\n  };\n\n\n  render() {\n    const { settings, dicts, dictionariesList, isDictListLoaded } = this.state;\n\n    return (\n      <SettingsLayout\n        gameModeOptions={this.gameModeOptions}\n        timeLimitOptions={this.timeLimitOptions}\n        settings={settings}\n        dicts={dicts}\n        dictionariesList={dictionariesList}\n        onChangeSettings={this.onChangeSettings}\n        onSelectDicts={this.onSelectDicts}\n        isDictListLoaded={isDictListLoaded}\n        dictFallback={this.dictFallback}\n        returnToMenu={{ link: \"/Menu\" }}\n        killCache={{ onClick: this.killCache }}\n      />\n    );\n  }\n}\n\nexport default SettingsContainer;\n","import RulesLayout from \"./RulesLayout\";\n\nexport default RulesLayout;\n","import React from \"react\";\nimport Header from \"components/Header\";\nimport Icon from \"components/Icon\";\nimport RoundButton from \"components/RoundButton\";\nimport \"./RulesLayout.css\";\n\nconst RulesLayout = ({ returnToMenu }) => {\n  return (\n    <div className=\"RulesLayout\">\n      <Header\n        fixed\n        leftButton={\n          <RoundButton small ghost {...returnToMenu}>\n            <Icon name=\"Back\" />\n          </RoundButton>\n        }\n      >\n        <h1>Rules</h1>\n      </Header>\n      <div className=\"RulesLayout-textContainer\">\n        <p>\n          <i>\n          The goal is to get your teammates to guess the word you are describing, but there’s a list of words you can’t say.\n          </i>\n        </p>\n        <p>\n          If your explanation was enough good to right guess, congrats! You made\n          a hit — swipe card to the right and you will get another card. If you can't\n          explain this word now or struggling with some troubles while\n          explaining — swipe left to skip the card. If you say any of taboo\n          words during explaining — you made a buzz — push the red button with\n          the cross and you will get a new card, probably.\n        </p>\n        <p>\n          When your set of cards or round time is over you will see your team's\n          efficiency in the round. A team, who do more great results wins.\n        </p>\n\n        <h2>Game Modes</h2>\n        <p>\n          Here are two competitive game modes — Time attack and Set of card and\n          Free play for practice.\n        </p>\n        <p>\n          Time attack — means do as much as possible hits in a limited amount of\n          time.\n        </p>\n        <p>\n          Set of cards — means that you have a fixed number of cards and you\n          have to explain it as quick as you can.\n        </p>\n\n        <h2>Quickstart</h2>\n        <ol>\n          <li>Divide your group into teams</li>\n          <li>Select mode of the game</li>\n          <li>Start the game</li>\n          <li>Do your best</li>\n        </ol>\n\n        <div className=\"contribute\">\n        <div>\n          <img src=\"/images/help.jpg\" alt=\"Help\" />\n        </div>\n          <h3>Want to contribute?</h3>\n          <p>\n            Hi there! I need some help with dictionaries, spellchecking, code\n            review and getting Service Workers to work and make the game less\n            online-ish.\n          </p>\n          <p>\n            If you want to share your feedback, suggest a feature or you have a\n            few time and want to help, write me to:\n          </p>\n\n          <ul>\n            <li>Telegram: <a href=\"https://t.me/litvinovich_alexander\">@litvinovich_alexander</a></li>\n            <li>Email: <a href=\"mailto:litvinovich.alexander@gmail.com\">litvinovich.alexander@gmail.com</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RulesLayout;\n","import RulesContainer from \"./RulesContainer\";\n\nexport default RulesContainer;\n","import React from \"react\";\nimport RulesLayout from \"layouts/RulesLayout\";\n\nconst RulesContainer = () => {\n  return <RulesLayout returnToMenu={{ link: \"/Menu\" }} />;\n};\n\nexport default RulesContainer;\n","import React, { Component } from \"react\";\nimport Swipeable from \"react-swipy\";\nimport classNames from \"classnames\";\nimport \"./Card.css\";\n\nconst SwipeableContainer = (props) => {\n  const {cardIndex, children} = props;\n  if(cardIndex === 1) return (<Swipeable {...props}/>);\n  return (<>{children}</>);\n}\n\nexport class Card extends Component {\n  swipeDirection;\n\n  onClickRight = () => {\n    this.forceSwipeRight();\n    this.props.right();\n  };\n  onClickSkip = () => {\n    this.forceSwipeLeft();\n    this.props.skip();\n  };\n\n  onSwipe = direction => {\n    this.swipeDirection = direction;\n  };\n\n  onAfterSwipe = () => {\n    const { isCardBack, onSwipeStart, onSwipeLeft, onSwipeRight } = this.props;\n\n    if (isCardBack) {\n      onSwipeStart();\n    } else {\n      if (this.swipeDirection === \"left\") onSwipeLeft();\n      if (this.swipeDirection === \"right\") onSwipeRight();\n    }\n    this.swipeDirection = null;\n  };\n\n  render() {\n    const {\n      currentCard,\n      cardSet,\n      word,\n      tabooWords,\n      category,\n      setForceSwipe,\n\n      gameMode,\n      freePlay,\n      cardIndex,\n      isCardBack,\n      isLoading\n    } = this.props;\n    return (\n      <div\n        className={classNames(\"CardWrapper\", `is-layer${cardIndex}`, {\n          \"is-cardBack\": isCardBack,\n          \"is-loading\": isLoading\n        })}\n      >\n        <SwipeableContainer\n          isLoading={isLoading}\n          cardIndex={cardIndex}\n          onSwipe={this.onSwipe}\n          onAfterSwipe={this.onAfterSwipe}\n          buttons={({ left, right }) => {\n            // Dirty hack to drill up forceSwipe func to container\n            setForceSwipe(left, false);\n            setForceSwipe(right, true);\n          }}\n        >\n          <div className=\"Card\">\n            {!isCardBack && (\n              <div className=\"Card_inner\">\n                {!gameMode && !freePlay && (\n                  <div className=\"Card_number\">\n                    {currentCard} of {cardSet}\n                  </div>\n                )}\n\n                <div className=\"Card_title\">\n                  <label className=\"Card_title_category\">{category}</label>\n                  <h2 className=\"Card_title_word\">{word}</h2>\n                </div>\n\n                <div className=\"Cards_tabooWords\">\n                  <label className=\"Cards_tabooWords_title\">taboo words:</label>\n                  {tabooWords.map((tabooWord, i) => (\n                    <div className=\"Cards_tabooWords_word\" key={i}>\n                      {tabooWord}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"CardBack\">\n            <div className=\"CardBack-inner\">\n              <div className=\"CardBack-pattern\">\n                <h2 className=\"CardBack-title\">Swipe to&nbsp;start!</h2>\n                <label className=\"CardBack-subTitle\"> or tap the button below </label>\n              </div>\n            </div>\n          </div>\n        </SwipeableContainer>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","\nimport Card from './Card';\n\nexport default Card;","import ProgressBar from './ProgressBar';\n\nexport default ProgressBar;","import React from \"react\";\nimport \"./ProgressBar.css\";\n\nconst ProgressBar = ({min, max, value}) => {\n\n    let style = {width: `${100*value/(max-min)}%`};\n    \n    return(\n        <div className=\"ProgressBar\">\n            <div className=\"ProgressBar-fill\" style={style}></div>\n        </div>\n    );\n}\n\nexport default ProgressBar;","import ModalWindow from \"./ModalWindow\";\n\nexport default ModalWindow;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./ModalWindow.css\";\n\nconst onClickBuffer = func => event => {\n  event.stopPropagation();\n  func();\n};\n\nconst ModalWindow = ({\n  children,\n  title,\n  text,\n  color,\n  onOpen = () => {},\n  onClose = () => {},\n  leftButton,\n  rightButton,\n  isOpened\n}) => {\n  const classes = classNames(\"ModalWindow-Header\", {\n    \"ModalWindow-Header--colorBlue\": color === \"blue\",\n    \"ModalWindow-Header--colorGreen\": color === \"green\",\n    \"ModalWindow-Header--colorRed\": color === \"red\",\n    \"ModalWindow-Header--colorMagenta\": color === \"magenta\",\n    \"ModalWindow-Header--colorBlack\": color === \"black\"\n  });\n\n  return (\n    <>\n      <div\n        className={classNames(\"ModalWindow\", { opened: isOpened })}\n        onClick={onClickBuffer(onClose)}\n      >\n        <div className=\"ModalWindow-Content\">\n          {title ? (\n            <div class={classes}>\n              <h2>{title}</h2>\n              {text ? <p className=\"ModalWindow-Text\">{text}</p> : null}\n            </div>\n          ) : null}\n          {children}\n          {leftButton && rightButton && (\n            <div className=\"ModalWindow-SideBySide\">\n              <div className=\"ModalWindow-SideBySide-Container\">\n                {leftButton}\n              </div>\n              <div className=\"ModalWindow-SideBySide-Container\">\n                {rightButton}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      <div\n        className={classNames(\"ModalOverlay\", {\n          opened: isOpened\n        })}\n      />\n    </>\n  );\n};\n\nexport default ModalWindow;\n","import GameLayout from \"./GameLayout\";\n\nexport default GameLayout;\n","import React from \"react\";\nimport \"./GameLayout.css\";\nimport Card from \"components/Card\";\nimport { secToTimeString } from \"utils/Helpers.js\";\n\nimport classNames from \"classnames\";\n\nimport ProgressBar from \"components/ProgressBar\";\nimport Indicator from \"components/Indicator\";\nimport Icon from \"components/Icon\";\nimport Header from \"components/Header\";\nimport RoundButton from \"components/RoundButton\";\nimport Button from \"components/Button\";\n\nimport ModalWindow from \"components/ModalWindow\";\n\nconst renderHeader = ({ settings, gameState, score, headerAction }) => {\n  const timeIndicator = gameState.isFreePlay ? null : settings.gameMode ? (\n    <Indicator title=\"time left\" value={secToTimeString(score.timeDisplay)} />\n  ) : (\n    <Indicator title=\"time lapsed\" value={secToTimeString(score.timeDisplay)} />\n  );\n\n  const leftButton = gameState.isFreePlay ? (\n    <RoundButton {...headerAction.back} small ghost>\n      <Icon name=\"Back\" />\n    </RoundButton>\n  ) : (\n    <RoundButton {...headerAction.menu} small ghost>\n      <Icon name=\"Menu\" />\n    </RoundButton>\n  );\n\n  const rightButton = gameState.isFreePlay ? null : (\n    <RoundButton\n      {...headerAction.restart}\n      disabled={!gameState.isGameStarted}\n      small\n      ghost\n    >\n      <Icon name=\"Restart\" />\n    </RoundButton>\n  );\n\n  console.log(\"HEADER:\", gameState);\n\n  return (\n    <>\n      <Header leftButton={leftButton} rightButton={rightButton} fixed>\n        {timeIndicator}\n        <Indicator title=\"skipped\" value={score.skipped} />\n        <Indicator title=\"buzz\" value={score.wrong} />\n        <Indicator title=\"hit\" value={score.right} />\n      </Header>\n\n      {settings.gameMode && (\n        <ProgressBar\n          min=\"0\"\n          max={settings.timeLimit}\n          value={score.timeDisplay}\n        />\n      )}\n    </>\n  );\n};\n\nconst renderButtons = ({ onSkip, onAnswer, onStart, gameState }) => {\n  return (\n    <div className=\"GameLayout-buttons\">\n      {gameState.isGameStarted || gameState.isFreePlay ? (\n        <>\n          <RoundButton color=\"blue\" onClick={onSkip(true)} title=\"Skip card\">\n            <Icon name=\"Skip\" />\n          </RoundButton>\n          <RoundButton\n            color=\"red\"\n            small\n            onClick={onAnswer(false)}\n            title=\"Taboo word spoken\"\n          >\n            <Icon name=\"Cross\" />\n          </RoundButton>\n          <RoundButton\n            color=\"green\"\n            onClick={onAnswer(true, true)}\n            title=\"Called right\"\n          >\n            <Icon name=\"Right\" />\n          </RoundButton>\n        </>\n      ) : (\n        <>\n          <RoundButton\n            color=\"green\"\n            onClick={onStart(true)}\n            title=\"Start the game\"\n          >\n            <Icon name=\"Right\" />\n          </RoundButton>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst renderMenu = ({ gameState, onMenuActions }) => (\n  <ModalWindow\n    title=\"Pause\"\n    color=\"magenta\"\n    isOpened={gameState.isMenuOpened}\n    {...onMenuActions.overlay}\n  >\n    {gameState.isGameStarted && (\n      <Button\n        title=\"Restart\"\n        color=\"blue\"\n        size=\"small\"\n        {...onMenuActions.restart}\n      />\n    )}\n    <Button\n      title=\"Leave game\"\n      color=\"red\"\n      size=\"small\"\n      {...onMenuActions.goToMenu}\n    />\n    <Button\n      title=\"Resume\"\n      color=\"green\"\n      size=\"small\"\n      {...onMenuActions.resume}\n    />\n  </ModalWindow>\n);\n\nconst renderRestartDialog = ({ gameState, onRestartDialogActions }) => (\n  <ModalWindow\n    title=\"Reset game?\"\n    text=\"It means that all progress during this round will be lost. So is's up to you!\"\n    color=\"black\"\n    isOpened={gameState.isRestartDialogOpened}\n    {...onRestartDialogActions.overlay}\n    leftButton={\n      <Button\n        title=\"No\"\n        color=\"blue\"\n        size=\"small\"\n        {...onRestartDialogActions.resume}\n      />\n    }\n    rightButton={\n      <Button\n        title=\"Yes\"\n        color=\"red\"\n        size=\"small\"\n        {...onRestartDialogActions.restart}\n      />\n    }\n  />\n);\n\nconst GameLayout = props => {\n  console.log(\"Game layout: \", props);\n  const {\n    setForceSwipe,\n\n    onSkip = () => {},\n    onAnswer = () => {},\n    onStart = () => {},\n\n    settings,\n    score,\n    gameState,\n\n    cardsQueue\n  } = props;\n\n  const NUMBER_OF_CARDS_TO_SHOW = 4; //4th will be with zero opacity\n\n  return (\n    <div\n      className={classNames(\"GameLayout\", {\n        \"is-cardSet\": !settings.gameMode,\n        \"is-freePlay\": gameState.isFreePlay\n      })}\n    >\n      {renderHeader(props)}\n      <div className=\"GameLayout-cardWrapper\">\n        {cardsQueue.length > 0 &&\n          cardsQueue\n            .slice(-NUMBER_OF_CARDS_TO_SHOW)\n            .map((card, index, array) => {\n              const {\n                word,\n                image,\n                category,\n                tabooWords,\n                isCardBack,\n                isLoading = false\n              } = card;\n              return (\n                <Card\n                  cardIndex={array.length - index} //1-N, 1 - is upper\n                  onSwipeLeft={onSkip()}\n                  onSwipeRight={onAnswer(true)}\n                  onSwipeStart={onStart()}\n                  key={word + category}\n                  word={word}\n                  image={image}\n                  category={category}\n                  tabooWords={tabooWords}\n                  isCardBack={isCardBack}\n                  isFreePlay={gameState.isFreePlay}\n                  isLoading={isLoading}\n                  gameMode={settings.gameMode}\n                  cardSet={settings.cardSet}\n                  currentCard={score.currentCard}\n                  setForceSwipe={setForceSwipe}\n                />\n              );\n            })}\n      </div>\n      {renderButtons(props)}\n      {renderMenu(props)}\n      {renderRestartDialog(props)}\n    </div>\n  );\n};\n\nexport default GameLayout;\n","import React, { Component } from \"react\";\nimport GameLayout from \"layouts/GameLayout\";\nimport { withRouter } from \"react-router-dom\";\nimport GameStore from \"utils/GameStore.js\";\nimport Dictionary from \"utils/Dictionary\";\n\nconst initialState = (isFreePlay = false, keepScore = false) => {\n  let init = {\n    cardsQueue: [],\n    timerID: null\n  };\n\n  init.settings = GameStore.loadSettings();\n  if (!keepScore) {\n    init.score = {\n      right: 0,\n      wrong: 0,\n      skipped: 0,\n      time: 0,\n\n      timeDisplay: init.settings.gameMode ? init.settings.timeLimit : 0,\n      currentCard: 1\n    };\n  }\n  init.gameState = {\n    isGameStarted: false,\n    isFreePlay: isFreePlay,\n    isPaused: false,\n    isMenuOpened: false,\n    isRestartDialogOpened: false\n  };\n\n  return init;\n};\n\nclass GameContainer extends Component {\n  //Will be functions to force swipe at react-swipy\n  forceSwipeLeft;\n  forceSwipeRight;\n\n  outerData;\n\n  constructor(props) {\n    super(props);\n\n    const { isFreePlay } = props;\n    this.state = initialState(isFreePlay);\n\n    console.log(this.state);\n  }\n\n  componentWillUnmount() {\n    const { timerID } = this.state;\n    clearInterval(timerID);\n  }\n\n  async componentDidMount() {\n    this.outerData = await this.loadDicts(GameStore.loadDicts());\n    this.resetCards();\n  }\n\n  async loadDicts(filter) {\n    try {\n      const dictList = await Dictionary.list();\n      console.log(\"PLIST: \", dictList);\n      try {\n        const dicts = await Promise.all(\n          Object.keys(dictList).reduce(\n            (prev, dictId) => [...prev, Dictionary.get(dictId)],\n            []\n          )\n        );\n\n        console.log(\"PARRDICTS: \", dicts);\n\n        let dictFallback = !Object.keys(filter).reduce(\n          (prev, cur) => prev || filter[cur],\n          false\n        );\n\n        const result = Object.keys(dictList).reduce(\n          (\n            prev,\n            dictId,\n            index\n          ) =>\n            filter[dictId] || dictFallback\n              ? [...prev, ...dicts[index]]\n              : [...prev],\n          []\n        );\n\n        console.log(\"PDICTS: \", result);\n\n        this.setState({ isDictLoaded: true });\n        return result;\n      } catch {\n        console.error(\"Error loading dictionaries\");\n      }\n    } catch {\n      console.error(\"Error loading list\");\n    }\n  }\n\n  render() {\n    const { settings, score, gameState, cardsQueue, isDictLoaded } = this.state;\n\n    return (\n      <GameLayout\n        onAnswer={this.onAnswer}\n        onSkip={this.onSkip}\n        onStart={this.onStart}\n        headerAction={{\n          menu: {\n            onClick: this.onModalWindowOpened(true, \"menu\")\n          },\n          restart: {\n            onClick: this.onModalWindowOpened(true, \"restart\")\n          },\n          back: {\n            link: \"/Menu\"\n          }\n        }}\n        onMenuActions={{\n          overlay: {\n            onClose: this.onModalWindowOpened(false, \"menu\")\n          },\n          restart: {\n            onClick: this.onRestart\n          },\n          goToMenu: {\n            link: \"/Menu\"\n          },\n          resume: {\n            onClick: this.onModalWindowOpened(false, \"menu\")\n          }\n        }}\n        onRestartDialogActions={{\n          overlay: {\n            onClose: this.onModalWindowOpened(false, \"restart\")\n          },\n          restart: {\n            onClick: this.onRestart\n          },\n          resume: {\n            onClick: this.onModalWindowOpened(false, \"restart\")\n          }\n        }}\n        settings={settings}\n        score={score}\n        gameState={gameState}\n        cardsQueue={cardsQueue}\n        setForceSwipe={this.setForceSwipe}\n        isDictLoaded={isDictLoaded}\n      />\n    );\n  }\n\n  setForceSwipe = (func, toRight) => {\n    if (toRight) this.forceSwipeRight = func;\n    else this.forceSwipeLeft = func;\n  };\n\n  onRestart = () => {\n    const { timerID } = this.state;\n    clearInterval(timerID);\n    this.resetCards();\n  };\n\n  resetCards = (keepScore = false) => {\n    const { isFreePlay } = this.props;\n\n    this.setState(initialState(isFreePlay, keepScore), () => {\n      const { settings, gameState } = this.state;\n\n      let cards = [...this.outerData];\n\n      cards.sort(() => Math.random() - 0.5);\n\n      if (settings.gameMode === false) {\n        cards = cards.splice(0, settings.cardSet);\n      }\n\n      if (!gameState.isFreePlay) cards.push({ isCardBack: true });\n\n      this.setState({ cardsQueue: cards });\n\n      console.log(\"ON RESET: \", this.state);\n    });\n  };\n\n  tick = () => {\n    let { settings, score } = this.state;\n\n    if (settings.gameMode && score.time === settings.timeLimit) this.roundEnd();\n\n    this.setState(state => {\n      const { score, settings } = state;\n      score.time += 1;\n      score.timeDisplay = settings.gameMode\n        ? settings.timeLimit - score.time\n        : score.time;\n      return { score: score };\n    });\n  };\n\n  roundEnd = () => {\n    const { settings, score, timerID } = this.state;\n\n    clearInterval(timerID);\n\n    let roundStat = {\n      timeStamp: Date.now(),\n      gameMode: settings.gameMode,\n      timeLimit: settings.timeLimit,\n\n      time: score.time,\n      right: score.right,\n      wrong: score.wrong,\n      skipped: score.skipped\n    };\n\n    GameStore.pushStats(roundStat);\n\n    this.navToRoundEnd(this.props);\n  };\n\n  onModalWindowOpened = (opened, kind) => () => {\n    const { gameState } = this.state;\n\n    switch (kind) {\n      case \"menu\":\n        gameState.isMenuOpened = opened;\n        break;\n\n      case \"restart\":\n        gameState.isRestartDialogOpened = opened;\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({ gameState: gameState }, () => {\n      if (gameState.isGameStarted) this.setPause(opened);\n    });\n  };\n\n  setPause = paused => {\n    let { gameState, timerID } = this.state;\n\n    if (paused === true) {\n      clearInterval(timerID);\n    } else {\n      timerID = window.setInterval(this.tick, 1000);\n    }\n\n    gameState.isPaused = paused;\n\n    console.log(`PAUSED ${gameState.isPaused}`);\n\n    this.setState({ gameState: gameState, timerID: timerID });\n  };\n\n  onStart = (forceSwipe = false) => () => {\n    if (forceSwipe) return this.forceSwipeRight();\n\n    const { gameState, cardsQueue } = this.state;\n\n    cardsQueue.pop();\n    gameState.isGameStarted = true;\n\n    this.setState({ cardsQueue: cardsQueue, gameState: gameState }, () => {\n      if (cardsQueue.length === 0) this.roundEnd();\n      this.setPause(false);\n    });\n  };\n\n  onAnswer = (isRight, forceSwipe = false) => () => {\n    if (forceSwipe) return this.forceSwipeRight();\n\n    const { score, gameState, cardsQueue } = this.state;\n\n    cardsQueue.pop();\n\n    if (isRight) {\n      score.right += 1;\n    } else {\n      score.wrong += 1;\n    }\n\n    score.currentCard += 1;\n\n    this.setState({ cardsQueue: cardsQueue, score: score }, () => {\n      if (cardsQueue.length === 0) {\n        if (gameState.isFreePlay) {\n          this.resetCards(true);\n        } else {\n          this.roundEnd();\n        }\n      }\n    });\n  };\n\n  onSkip = (forceSwipe = false) => () => {\n    if (forceSwipe) return this.forceSwipeLeft();\n\n    const { cardsQueue, score } = this.state;\n\n    if (cardsQueue.length > 1) {\n      cardsQueue.unshift(cardsQueue.pop());\n      score.skipped += 1;\n\n      this.setState({ cardsQueue: cardsQueue, score: score }, () => {\n        if (cardsQueue.length === 0) this.roundEnd();\n      });\n    }\n  };\n\n  navToRoundEnd = ({ history }) => history.push(\"/RoundEnd\");\n}\n\nexport default withRouter(GameContainer);\n","import GameContainer from './GameContainer';\nexport default GameContainer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport SplashContainer from \"containers/SplashContainer\";\nimport MenuContainer from \"containers/MenuContainer\";\nimport StatisticsContainer from \"containers/StatisticsContainer\";\nimport SettingsContainer from \"containers/SettingsContainer\";\nimport RulesContainer from \"containers/RulesContainer\";\nimport GameContainer from \"containers/GameContainer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={SplashContainer} />\n          <Route\n            path=\"/Statistics\"\n            component={() => <StatisticsContainer roundEnd={false} />}\n          />\n          <Route\n            path=\"/RoundEnd\"\n            component={() => <StatisticsContainer roundEnd={true} />}\n          />\n          <Route path=\"/Menu\" component={MenuContainer} />\n          <Route path=\"/Rules\" component={RulesContainer} />\n          <Route path=\"/Settings\" component={SettingsContainer} />\n          <Route path=\"/Game\" exact component={GameContainer} />\n          <Route\n            path=\"/Game/Free\"\n            exact\n            component={() => <GameContainer isFreePlay={true} />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}